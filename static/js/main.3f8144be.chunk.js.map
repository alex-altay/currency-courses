{"version":3,"sources":["assets/arrow.svg","assets/close.svg","components/Header/Header.js","components/Courses/Course/Course.js","components/Courses/Courses.js","components/AddNewCurrency/AddNewCurrency.js","components/Layout/Layout.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","header","props","className","date","createMarkup","symbols","__html","course","htmlFor","fromName","id","type","defaultValue","quantity","min","onChange","e","calculate","ind","dangerouslySetInnerHTML","fromSymbol","src","arrow","alt","onClick","swap","toName","placeholder","Number","forAll","toFixed","readOnly","toSymbol","close","delete","courses","coursesTags","coursesList","map","c","key","fromKey","toKey","forOne","addNewCurrency","currenciesList","Object","keys","currencies","k","sort","a","b","value","onSubmit","addCourse","required","RUB","SYMBOLS","AMD","AUD","AZN","BGN","BRL","BYN","CAD","CHF","CNY","CZK","DKK","EUR","GBP","HKD","HUF","INR","JPY","KGS","KRW","KZT","MDL","NOK","PLN","RON","SEK","SGD","TJS","TMT","TRY","UAH","USD","UZS","XDR","ZAR","Layout","updateLocalStorage","window","localStorage","setItem","JSON","stringify","setDefaultCourses","allCurrencies","state","defaultCurrenciesKeys","assembleCourse","push","calcCourseForOneCoin","Name","addCourseButtonHandler","event","preventDefault","target","elements","slice","setState","reset","deleteCourseButtonHandler","index","splice","swapCourseButtonHandler","oldCourse","newCourse","error","isLoaded","dateFull","dateShort","toValue","Value","toNominal","Nominal","fromValue","fromNominal","fetch","then","res","json","result","Date","toLocaleDateString","storage","getItem","parse","dateString","this","Component","App","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","console","message"],"mappings":"0FAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,uTCY5BC,G,YATA,SAAAC,GACb,OACE,4BAAQC,UAAU,UAChB,wBAAIA,UAAU,iBAAd,2FACA,wBAAIA,UAAU,oBAAd,gBAAqCD,EAAME,S,wCCE3CC,EAAe,SAAAC,GACnB,MAAO,CAAEC,OAAQD,IA6CJE,EA1CA,SAAAN,GACX,OACC,0BAAMC,UAAU,mBAEf,yBAAKA,UAAU,eACb,2BAAOM,QAAQ,cAAcP,EAAMQ,UACnC,yBAAKP,UAAU,eACb,2BACEQ,GAAG,aACHR,UAAU,eACVS,KAAK,SACLC,aAAcX,EAAMY,SACpBC,IAAI,IACJC,SAAU,SAACC,GAAD,OAAOf,EAAMgB,UAAUD,EAAGf,EAAMiB,QAC5C,yBAAKhB,UAAU,sBACb,0BAAMA,UAAU,mBAAmBiB,wBAAyBf,EAAaH,EAAMmB,iBAKrF,yBAAKlB,UAAU,yBAAyBmB,IAAKC,IAAOC,IAAI,8FAAmBC,QAASvB,EAAMwB,OAE1F,yBAAKvB,UAAU,aACb,2BAAOM,QAAQ,cAAcP,EAAMyB,QACnC,yBAAKxB,UAAU,eACb,2BACEA,UAAU,eACVS,KAAK,OACLgB,YAAaC,OAAO3B,EAAM4B,QAAQC,QAAQ,GAC1CC,UAAQ,IACV,yBAAK7B,UAAU,sBACb,0BAAMA,UAAU,mBAAmBiB,wBAAyBf,EAAaH,EAAM+B,eAKrF,yBAAK9B,UAAU,yBAAyBmB,IAAKY,IAAOV,IAAI,sEAAeC,QAASvB,EAAMiC,WCvB7EC,G,MArBC,SAAAlC,GACd,IAAMmC,EAAcnC,EAAMoC,YAAYC,KAAI,SAACC,EAAGrB,GAAJ,OACxC,kBAAC,EAAD,CACEsB,IAAKtB,EACLA,IAAOA,EACPuB,QAASF,EAAEE,QACXhC,SAAU8B,EAAE9B,SACZW,WAAYmB,EAAEnB,WACdsB,MAAOH,EAAEG,MACThB,OAAQa,EAAEb,OACVM,SAAUO,EAAEP,SACZW,OAAQJ,EAAEI,OACV9B,SAAU0B,EAAE1B,SACZgB,OAAQU,EAAEV,OACVK,OAAQ,kBAAMjC,EAAMiC,OAAOhB,IAC3BO,KAAM,kBAAMxB,EAAMwB,KAAKP,IACvBD,UAAWhB,EAAMgB,eAErB,OAAO,6BAAMmB,KCcAQ,G,MAlCQ,SAAA3C,GACrB,IACI4C,EADmBC,OAAOC,KAAK9C,EAAM+C,YACLV,KAAI,SAAAW,GAAC,MAAI,CAACA,EAAGhD,EAAM+C,WAAWC,GAAjB,SAIjD,OAFAJ,GADAA,EAAiBA,EAAeK,MAAK,SAACC,EAAGC,GAAJ,OAAUD,EAAE,GAAKC,EAAE,OACxBd,KAAI,SAAAC,GAAC,OAAI,4BAAQC,IAAKD,EAAE,GAAIc,MAAOd,EAAE,IAAKA,EAAE,OAIxE,0BAAMrC,UAAU,aAAaoD,SAAUrD,EAAMsD,WAE3C,qHAEA,yBAAKrD,UAAU,YACd,yBAAKA,UAAU,QACZ,2BAAOM,QAAQ,WAAf,4DACA,4BAAQE,GAAG,UAAUR,UAAU,eAAesD,UAAQ,EAACzB,UAAQ,GAC5Dc,IAIL,yBAAK3C,UAAU,MACb,2BAAOM,QAAQ,SAAf,yFACA,4BAAQE,GAAG,QAAQR,UAAU,eAAesD,UAAQ,EAACzB,UAAQ,GAC1Dc,IAIL,4BAAQlC,KAAK,SAAST,UAAU,8BAAhC,wDCnBJuD,EAAM,CACV,GAAM,SACN,QAAW,MACX,SAAY,MACZ,QAAW,EACX,KAAQ,8FACR,MAAS,EACT,SAAY,GAMRC,EAAU,CACdC,IAAK,UACLC,IAAK,QACLC,IAAK,UACLC,IAAK,GACLC,IAAK,QACLC,IAAK,KACLC,IAAK,QACLC,IAAK,UACLC,IAAK,SACLC,IAAK,UACLC,IAAK,KACLC,IAAK,UACLC,IAAK,SACLC,IAAK,QACLC,IAAK,KACLC,IAAK,UACLC,IAAK,SACLC,IAAK,SACLC,IAAK,UACLC,IAAK,UACLC,IAAK,IACLC,IAAK,KACLC,IAAK,UACLC,IAAK,IACLzB,IAAK,UACL0B,IAAK,KACLC,IAAK,QACLC,IAAK,SACLC,IAAK,IACLC,IAAK,UACLC,IAAK,UACLC,IAAK,QACLC,IAAK,YACLC,IAAK,MACLC,IAAK,KAyJQC,E,kDArJb,WAAY5F,GAAQ,IAAD,8BACjB,cAAMA,IAeR6F,mBAAqB,SAAC3D,GACpB4D,OAAOC,aAAaC,QA1DE,wBA0DyBC,KAAKC,UAAUhE,KAjB7C,EAqBnBiE,kBAAoB,SAAAC,GAClB,IADmC,EAC/BhE,EAAc,GADiB,cAEnB,EAAKiE,MAAMC,uBAFQ,IAEnC,2BAAkD,CAAC,IAAxChE,EAAuC,QAC1ChC,EAAS,EAAKiG,eAAejE,EAAEE,QAASF,EAAEG,MAAO2D,GACvDhE,EAAYoE,KAAKlG,IAJgB,8BAMnC,OAAO8B,GA3BU,EA+BnBmE,eAAiB,SAAC/D,EAASC,EAAO2D,GAA+B,IAAhBxF,EAAe,uDAAN,EAClD8B,EAAS,EAAK+D,qBAAqBjE,EAASC,EAAO2D,GACnD9F,EAAS,CACbkC,QAASA,EACThC,SAAU4F,EAAc5D,GAASkE,KACjCvF,WAAYsC,EAAQjB,GACpBC,MAAOA,EACPhB,OAAQ2E,EAAc3D,GAAOiE,KAC7B3E,SAAU0B,EAAQhB,GAClBC,OAAQA,EACR9B,SAAU,EACVgB,OAAQhB,EAAW8B,GACrB,OAAOpC,GA3CU,EA8CnBqG,uBAAyB,SAACC,GACxBA,EAAMC,iBACN,IAAMrE,EAAUoE,EAAME,OAAOC,SAASvE,QAAQY,MACxCX,EAAQmE,EAAME,OAAOC,SAAStE,MAAMW,MACpChB,EAAc,EAAKiE,MAAMjE,YAAY4E,QACrC1G,EAAS,EAAKiG,eAAe/D,EAASC,EAAO,EAAK4D,MAAMD,eAC9DhE,EAAYoE,KAAKlG,GACjB,EAAK2G,SAAS,CAAE7E,YAAaA,IAC7B,EAAKyD,mBAAmBzD,GACxBwE,EAAME,OAAOI,SAvDI,EA0EnBC,0BAA4B,SAAAC,GAC1B,IAAMhF,EAAc,EAAKiE,MAAMjE,YAAY4E,QAC3C5E,EAAYiF,OAAOD,EAAO,GAC1B,EAAKH,SAAS,CAAC7E,YAAaA,IAC5B,EAAKyD,mBAAmBzD,IA9EP,EAiFnBkF,wBAA0B,SAAAF,GACxB,IAAMhF,EAAc,EAAKiE,MAAMjE,YAAY4E,QACvCO,EAAYnF,EAAYgF,GACtBI,EAAY,EAAKjB,eAAegB,EAAU9E,MAC9C8E,EAAU/E,QAAS,EAAK6D,MAAMD,cAAemB,EAAU3G,UACzDwB,EAAYgF,GAASI,EACrB,EAAKP,SAAS,CAAC7E,YAAaA,KAvFX,EA0FnBpB,UAAY,SAAC4F,EAAOQ,GAClB,IAAMhF,EAAc,EAAKiE,MAAMjE,YAAY4E,QACvC1G,EAAS8B,EAAYgF,GACzB9G,EAAOM,SAAWgG,EAAME,OAAO1D,MAC/B9C,EAAOsB,OAASgF,EAAME,OAAO1D,MAAQ9C,EAAOoC,OAC5CN,EAAYgF,GAAS9G,EACrB,EAAK2G,SAAS,CAAE7E,YAAaA,KA9F7B,EAAKiE,MAAQ,CACXoB,MAAO,KACPC,UAAU,EACVC,SAAU,KACVC,UAAW,KACXxB,cAAe,GACfE,sBAAuB,CACrB,CAAE9D,QAAS,MAAOC,MAAO,OACzB,CAAED,QAAS,MAAOC,MAAO,OACzB,CAAED,QAAS,MAAOC,MAAO,QAC3BL,YAAa,IAZE,E,iEA0DEI,EAASC,EAAO2D,GACnC,IACMyB,EAAUlG,OAAOyE,EAAc3D,GAAOqF,OACtCC,EAAYpG,OAAOyE,EAAc3D,GAAOuF,SACxCC,EAAYtG,OAAOyE,EAAc5D,GAASsF,OAC1CI,EAAcvG,OAAOyE,EAAc5D,GAASwF,SAQlD,MAPc,QAAVvF,EACiBwF,EAAUC,EACR,QAAZ1F,EACU,GAAKqF,EAAQE,GAEZE,EAAYC,GAAgBL,EAAUE,K,0CA8BzC,IAAD,OAClBI,MA3JQ,8CA4JLC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAACG,GACL,IAAMZ,EAAWY,EAAM,KACjBX,EAAY,IAAIY,KAAKb,GAAUc,qBAE/BrC,EAAgBmC,EAAM,OAC5BnC,EAAc5C,IAAMA,EAGpB,IAAIpB,EAAc,GAEdsG,EAAU5C,OAAOC,aAAa4C,QAzJhB,yBA2JhBvG,EADEsG,EACYzC,KAAK2C,MAAMF,GAEX,EAAKvC,kBAAkBC,GAGvC,EAAKa,SAAS,CACZS,UAAU,EACVmB,WAAYlB,EACZC,UAAWA,EACXxB,cAAeA,EACfhE,YAAaA,OAGf,SAACqF,GAAD,OAAW,EAAKR,SAAS,CAAES,UAAU,EAAMD,MAAOA,S,+BAKtD,OACA,kBAAC,WAAD,KACE,kBAAC,EAAD,CAAQvH,KAAM4I,KAAKzC,MAAMuB,YACzB,kBAAC,EAAD,CACExF,YAAa0G,KAAKzC,MAAMjE,YACxBH,OAAQ6G,KAAK3B,0BACb3F,KAAMsH,KAAKxB,wBACXtG,UAAW8H,KAAK9H,YAClB,kBAAC,EAAD,CACE+B,WAAY+F,KAAKzC,MAAMD,cACvB9C,UAAWwF,KAAKnC,8B,GA/IHoC,aCrDNC,MAJf,WACE,OAAO,kBAAC,EAAD,OCMWC,QACW,cAA7BnD,OAAOoD,SAASC,UAEe,UAA7BrD,OAAOoD,SAASC,UAEhBrD,OAAOoD,SAASC,SAASC,MACvB,2DCVNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDuHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBxB,MAAK,SAAAyB,GACJA,EAAaC,gBAEdC,OAAM,SAAAtC,GACLuC,QAAQvC,MAAMA,EAAMwC,c","file":"static/js/main.3f8144be.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/arrow.a3a6ba20.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.41ae3b1f.svg\";","import React from 'react';\nimport './Header.css';\n\nconst header = props => {\n  return (\n    <header className='header'>\n      <h1 className='header__title'>Курсы валют ЦБ РФ</h1>\n      <h2 className='header__subtitle'>на {props.date}</h2>\n    </header>\n  );\n}\n\nexport default header;\n","import React from 'react';\n\nimport './Course.css';\n\nimport arrow from '../../../assets/arrow.svg';\nimport close from '../../../assets/close.svg';\n\n// Функция для отображения символов валют, \n// которые иначе Реакт экранирует\nconst createMarkup = symbols => {\n  return { __html: symbols };\n}\n\nconst course = props => {\n    return (\n     <form className='currency-course'>\n\n      <div className='from-course'>      \n        <label htmlFor='from-input'>{props.fromName}</label>\n        <div className='input-group'>\n          <input \n            id='from-input'\n            className='form-control' \n            type='number' \n            defaultValue={props.quantity} \n            min='0' \n            onChange={(e) => props.calculate(e, props.ind)}/>\n          <div className=\"input-group-append\">\n            <span className='input-group-text' dangerouslySetInnerHTML={createMarkup(props.fromSymbol)} />\n          </div>\n        </div>\n      </div>\n      \n      <img className='currency-course__arrow' src={arrow} alt='Поменять местами' onClick={props.swap} />\n\n      <div className='to-course'>\n        <label htmlFor='from-input'>{props.toName}</label>\n        <div className='input-group'>\n          <input \n            className=\"form-control\" \n            type=\"text\" \n            placeholder={Number(props.forAll).toFixed(2)} \n            readOnly />\n          <div className=\"input-group-append\">\n            <span className='input-group-text' dangerouslySetInnerHTML={createMarkup(props.toSymbol)} />\n          </div>\n        </div>\n      </div>\n\n      <img className='currency-course__close' src={close} alt='Удалить курс' onClick={props.delete} />\n\n    </form>\n    );\n}\n\nexport default course;\n","import React from 'react';\n\nimport Course from './Course/Course';\nimport './Courses.css';\n\nconst courses = props => {\n  const coursesTags = props.coursesList.map((c, ind) => \n    <Course \n      key={ind}\n      ind = {ind} \n      fromKey={c.fromKey} \n      fromName={c.fromName} \n      fromSymbol={c.fromSymbol}\n      toKey={c.toKey}\n      toName={c.toName}\n      toSymbol={c.toSymbol}\n      forOne={c.forOne}\n      quantity={c.quantity}\n      forAll={c.forAll} \n      delete={() => props.delete(ind)} \n      swap={() => props.swap(ind)}\n      calculate={props.calculate} />\n  );\n  return <div>{coursesTags}</div>;\n}\n\nexport default courses;\n","import React from 'react';\nimport './AddNewCurrency.css';\n\nconst addNewCurrency = props => {\n  const currenciesKeys = Object.keys(props.currencies);\n  let currenciesList = currenciesKeys.map(k => [k, props.currencies[k]['Name']]);\n  currenciesList = currenciesList.sort((a, b) => a[1] > b[1]);\n  currenciesList = currenciesList.map(c => <option key={c[0]} value={c[0]}>{c[1]}</option>);\n\n  return (\n      \n      <form className='add-course' onSubmit={props.addCourse}>\n       \n        <h3>Добавить валюту</h3>\n\n        <div className='add-line'>\n         <div className='from'>\n            <label htmlFor='fromKey'>У меня есть</label>\n            <select id='fromKey' className=\"form-control\" required readOnly>\n              {currenciesList}\n            </select>\n          </div>\n          \n          <div className='to'>\n            <label htmlFor='toKey'>Хочу приобрести</label>\n            <select id='toKey' className=\"form-control\" required readOnly>\n              {currenciesList}\n            </select>\n          </div>\n        \n          <button type='submit' className=\"btn btn-primary add-button\">Добавить</button>  \n        </div>\n      \n      </form> \n  );\n}\n\nexport default addNewCurrency;\n","import React, { Component, Fragment } from 'react';\nimport './Layout.css';\n\nimport Header from '../Header/Header';\nimport Courses from '../Courses/Courses';\nimport AddNewCurrency from '../AddNewCurrency/AddNewCurrency';\n\n\nconst URL = 'https://www.cbr-xml-daily.ru/daily_json.js';\n\n// Создаем рубль, потому что он отсутствует среди валют в API\nconst RUB = {\n  \"ID\": \"R66666\",\n  \"NumCode\": \"643\",\n  \"CharCode\": \"RUB\",\n  \"Nominal\": 1,\n  \"Name\": \"Российский рубль\",\n  \"Value\": 1,\n  \"Previous\": 1\n};\n\n// Ключ, по которому храним данные о сохраненных валютах в localStorage браузера пользователя\nconst LOCAL_STORAGE_KEY = 'defaultCurrenciesKeys';\n\nconst SYMBOLS = {\n  AMD: '&#1423;',\n  AUD: '&#36;',\n  AZN: '&#8380;',\n  BGN: '',\n  BRL: '&#36;',\n  BYN: 'Br',\n  CAD: '&#36;',\n  CHF: '&#8355;',\n  CNY: '&#165;',\n  CZK: 'Kč',\n  DKK: 'kr',\n  EUR: '&#8364;',\n  GBP: '&#163;',\n  HKD: '&#36;',\n  HUF: 'Ft',\n  INR: '&#8377;',\n  JPY: '&#165;',\n  KGS: 'с',\n  KRW: '&#8361;',\n  KZT: '&#8376;',\n  MDL: 'L',\n  NOK: 'kr',\n  PLN: 'zł',\n  RON: 'L',\n  RUB: '&#8381;',\n  SEK: 'kr',\n  SGD: '&#36;',\n  TJS: 'с',\n  TMT: 'm',\n  TRY: '&#8378;',\n  UAH: '&#8372;',\n  USD: '&#36;',\n  UZS: 'so’m',\n  XDR: 'SDR',\n  ZAR: 'R'\n}\n\nclass Layout extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      error: null,\n      isLoaded: false,\n      dateFull: null,\n      dateShort: null,\n      allCurrencies: {},\n      defaultCurrenciesKeys: [\n        { fromKey: 'USD', toKey: 'RUB' }, \n        { fromKey: 'EUR', toKey: 'RUB'}, \n        { fromKey: 'GBP', toKey: 'EUR'}],\n      coursesList: [],\n    }\n  };\n\n  updateLocalStorage = (courses) => {\n    window.localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(courses));\n  }\n\n  // Если в localStorage браузера нет записей о курсах, устанавливаем курсы по умолчанию\n  setDefaultCourses = allCurrencies => {\n    let coursesList = [];\n    for (const c of this.state.defaultCurrenciesKeys) {\n      const course = this.assembleCourse(c.fromKey, c.toKey, allCurrencies);\n      coursesList.push(course);\n    }\n    return coursesList;\n  }\n\n  // Создает и возвращает объект курса в одном месте, чтобы не дублировать код\n  assembleCourse = (fromKey, toKey, allCurrencies, quantity=1) => {    \n    const forOne = this.calcCourseForOneCoin(fromKey, toKey, allCurrencies);    \n    const course = {\n      fromKey: fromKey,\n      fromName: allCurrencies[fromKey].Name,\n      fromSymbol: SYMBOLS[fromKey],\n      toKey: toKey,\n      toName: allCurrencies[toKey].Name,\n      toSymbol: SYMBOLS[toKey],\n      forOne: forOne,\n      quantity: 1,\n      forAll: quantity * forOne}\n    return course;\n  }\n\n  addCourseButtonHandler = (event) => {\n    event.preventDefault();\n    const fromKey = event.target.elements.fromKey.value;\n    const toKey = event.target.elements.toKey.value;\n    const coursesList = this.state.coursesList.slice();\n    const course = this.assembleCourse(fromKey, toKey, this.state.allCurrencies);  \n    coursesList.push(course);\n    this.setState({ coursesList: coursesList });\n    this.updateLocalStorage(coursesList);\n    event.target.reset();\n  }\n\n  calcCourseForOneCoin(fromKey, toKey, allCurrencies) {\n    let courseForOneCoin;\n    const toValue = Number(allCurrencies[toKey].Value);\n    const toNominal = Number(allCurrencies[toKey].Nominal);\n    const fromValue = Number(allCurrencies[fromKey].Value);\n    const fromNominal = Number(allCurrencies[fromKey].Nominal);\n    if (toKey === 'RUB') {\n      courseForOneCoin = fromValue/fromNominal;\n    } else if (fromKey === 'RUB') {\n      courseForOneCoin = 1 / (toValue/toNominal);\n    } else {\n      courseForOneCoin = (fromValue / fromNominal) / (toValue / toNominal);\n    }\n    return courseForOneCoin;\n  }\n\n  deleteCourseButtonHandler = index => {\n    const coursesList = this.state.coursesList.slice();\n    coursesList.splice(index, 1);\n    this.setState({coursesList: coursesList});\n    this.updateLocalStorage(coursesList);\n  }\n\n  swapCourseButtonHandler = index => {\n    const coursesList = this.state.coursesList.slice();\n    let oldCourse = coursesList[index];\n    const newCourse = this.assembleCourse(oldCourse.toKey, \n      oldCourse.fromKey, this.state.allCurrencies, oldCourse.quantity);\n    coursesList[index] = newCourse;\n    this.setState({coursesList: coursesList});\n  }\n\n  calculate = (event, index) => {\n    const coursesList = this.state.coursesList.slice();\n    let course = coursesList[index];\n    course.quantity = event.target.value;\n    course.forAll = event.target.value * course.forOne;\n    coursesList[index] = course;\n    this.setState({ coursesList: coursesList });\n  }\n\n  componentDidMount() {\n    fetch(URL)\n      .then(res => res.json())\n      .then((result) => { \n        const dateFull = result['Date'];\n        const dateShort = new Date(dateFull).toLocaleDateString();\n\n        const allCurrencies = result['Valute'];\n        allCurrencies.RUB = RUB; // Добавляем рубль, которого нет в исходном списке\n        \n        // Подгружаем сохраненные или используем дефолтные курсы\n        let coursesList = [];        \n        // Если пользователь уже заходил и в localStorage сохранены его курсы\n        let storage = window.localStorage.getItem(LOCAL_STORAGE_KEY); \n        if (storage) {          \n          coursesList = JSON.parse(storage);\n        } else {\n          coursesList = this.setDefaultCourses(allCurrencies);\n        }\n\n        this.setState({ \n          isLoaded: true, \n          dateString: dateFull,\n          dateShort: dateShort,\n          allCurrencies: allCurrencies,\n          coursesList: coursesList, \n        });\n      },\n        (error) => this.setState({ isLoaded: true, error: error })\n      )\n  }\n  \n  render() {\n    return (\n    <Fragment>\n      <Header date={this.state.dateShort} />\n      <Courses \n        coursesList={this.state.coursesList} \n        delete={this.deleteCourseButtonHandler} \n        swap={this.swapCourseButtonHandler} \n        calculate={this.calculate} />\n      <AddNewCurrency \n        currencies={this.state.allCurrencies} \n        addCourse={this.addCourseButtonHandler} />\n    </Fragment>\n    );\n  }\n\n}\n\nexport default Layout;\n","import React from 'react';\nimport './App.css';\nimport Layout from './components/Layout/Layout';\n\n\nfunction App() {\n  return <Layout />;\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './reset.css';\nimport './index.css';\n\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}